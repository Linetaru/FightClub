%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 38b08ff2178cf394381f4c0918e0db1d, type: 3}
  m_Name: TrainingData_013_TiltEXE
  m_EditorClassIdentifier: 
  serializationData:
    SerializedFormat: 2
    SerializedBytes: 
    ReferencedUnityObjects:
    - {fileID: 8045468721652775528, guid: b31e606a7d07016488cda3a3a08f290c, type: 3}
    SerializedBytesString: 
    Prefab: {fileID: 0}
    PrefabModificationsReferencedUnityObjects: []
    PrefabModifications: []
    SerializationNodes:
    - Name: missions
      Entry: 7
      Data: 0|System.Collections.Generic.List`1[[MissionInputCondition, Assembly-CSharp]],
        mscorlib
    - Name: 
      Entry: 12
      Data: 4
    - Name: 
      Entry: 7
      Data: 1|MissionInputParry, Assembly-CSharp
    - Name: isParry
      Entry: 5
      Data: true
    - Name: isDummy
      Entry: 5
      Data: false
    - Name: nbOfParry
      Entry: 3
      Data: 1
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 2|MissionInputDodge, Assembly-CSharp
    - Name: aerialDodge
      Entry: 5
      Data: true
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 3|MissionInputDodge, Assembly-CSharp
    - Name: aerialDodge
      Entry: 5
      Data: true
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 4|MissionInputAttack, Assembly-CSharp
    - Name: attack
      Entry: 10
      Data: 0
    - Name: hitboxID
      Entry: 7
      Data: 5|System.Int32[], mscorlib
    - Name: 
      Entry: 14
      Data: 1
    - Name: 
      Entry: 3
      Data: 0
    - Name: 
      Entry: 13
      Data: 
    - Name: 
      Entry: 8
      Data: 
    - Name: playerReceiveAttack
      Entry: 5
      Data: false
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 13
      Data: 
    - Name: 
      Entry: 8
      Data: 
    - Name: failConditions
      Entry: 7
      Data: 6|System.Collections.Generic.List`1[[MissionInputCondition, Assembly-CSharp]],
        mscorlib
    - Name: 
      Entry: 12
      Data: 1
    - Name: 
      Entry: 7
      Data: 7|MissionInputRespawn, Assembly-CSharp
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 13
      Data: 
    - Name: 
      Entry: 8
      Data: 
  trialsName: 13 - Attack .EXE
  trialsDescription: 
  scene: TutorialStage2
  player: {fileID: 11400000, guid: eb2fa0c1d9cad924c81f593efb9c367c, type: 2}
  spawnPlayer: 2
  dummy: {fileID: 11400000, guid: eb2fa0c1d9cad924c81f593efb9c367c, type: 2}
  spawnEnemy: 3
  dummyBehavior: {fileID: 0}
  osef: 
  textboxStart:
  - For a stack of your power gauge, you can power up your attacks.
  - Those powered up attacks are called Attacks .EXE.
  - You can execute them by pressing the attack button and the parry at the same
    time.
  textboxEnd:
  - The difference between .EXE attacks and regular ones, are the fact that the startup
    of .EXE attacks put you in a parry state.
  - So with .EXE attacks you can defend while attacking.
  enemyPercentage: 0
  gaugeNumber: 7
  numberToSuccess: 3
  comboNotes:
  - Parry - <sprite=4>
  - Air Dash - <sprite=6>
  - Air Dash - <sprite=6> + <sprite=5>
  - Down Air - <sprite=8> + <sprite=0>
  moneyReward: 200
  nextTrial: {fileID: 11400000, guid: 8bdc15f036da38d45aeaf747b5346ec5, type: 2}
