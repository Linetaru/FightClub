%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 38b08ff2178cf394381f4c0918e0db1d, type: 3}
  m_Name: TrainingData_014_SpecialsEXE
  m_EditorClassIdentifier: 
  serializationData:
    SerializedFormat: 2
    SerializedBytes: 
    ReferencedUnityObjects:
    - {fileID: 8045468721652775528, guid: 5ff2e8a8e98fde6448cac282781e4e30, type: 3}
    - {fileID: 8045468721652775528, guid: 6cf1247217def6a4386609ccc53ff30b, type: 3}
    - {fileID: 8045468721652775528, guid: d75192a58e954b34695cc093adab23fe, type: 3}
    SerializedBytesString: 
    Prefab: {fileID: 0}
    PrefabModificationsReferencedUnityObjects: []
    PrefabModifications: []
    SerializationNodes:
    - Name: missions
      Entry: 7
      Data: 0|System.Collections.Generic.List`1[[MissionInputCondition, Assembly-CSharp]],
        mscorlib
    - Name: 
      Entry: 12
      Data: 3
    - Name: 
      Entry: 7
      Data: 1|MissionInputAttackWhiff, Assembly-CSharp
    - Name: attack
      Entry: 10
      Data: 0
    - Name: isDummy
      Entry: 5
      Data: false
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 2|MissionInputAttackWhiff, Assembly-CSharp
    - Name: attack
      Entry: 10
      Data: 1
    - Name: isDummy
      Entry: 5
      Data: false
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 3|MissionInputAttackWhiff, Assembly-CSharp
    - Name: attack
      Entry: 10
      Data: 2
    - Name: isDummy
      Entry: 5
      Data: false
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 13
      Data: 
    - Name: 
      Entry: 8
      Data: 
    - Name: failConditions
      Entry: 7
      Data: 4|System.Collections.Generic.List`1[[MissionInputCondition, Assembly-CSharp]],
        mscorlib
    - Name: 
      Entry: 12
      Data: 2
    - Name: 
      Entry: 7
      Data: 5|MissionInputRespawn, Assembly-CSharp
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 7
      Data: 6|MissionInputGauge, Assembly-CSharp
    - Name: gaugeNeeded
      Entry: 4
      Data: 1
    - Name: superior
      Entry: 5
      Data: false
    - Name: 
      Entry: 8
      Data: 
    - Name: 
      Entry: 13
      Data: 
    - Name: 
      Entry: 8
      Data: 
  trialsName: 13 - Specials .EXE
  trialsDescription: 
  scene: TutorialStage2
  player: {fileID: 11400000, guid: eb2fa0c1d9cad924c81f593efb9c367c, type: 2}
  spawnPlayer: 2
  dummy: {fileID: 11400000, guid: eb2fa0c1d9cad924c81f593efb9c367c, type: 2}
  spawnEnemy: 3
  dummyBehavior: {fileID: 0}
  osef: 
  textboxStart:
  - For 2 stacks of your power gauge, you can power up your specials attacks.
  - Those powered up attacks are called Specials .EXE.
  - You can execute them by pressing the special button and the parry at the same
    time.
  textboxEnd:
  - You can also first press the parry button, then right after the special button
    to execute a Special .EXE.
  enemyPercentage: 0
  gaugeNumber: 7
  numberToSuccess: 1
  comboNotes:
  - Breakers Boom .EXE
  - Breakers Boombox .EXE
  - Breakers Ascension .EXE
  moneyReward: 200
  nextTrial: {fileID: 11400000, guid: 6bb1e731a7a099a448c52f0dfe8940bf, type: 2}
